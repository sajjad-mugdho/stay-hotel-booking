// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Hotel {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  userId              String
  title               String
  description         String
  country             String
  city                String
  state               String
  image               String
  locationDescription String?
  gym                 Boolean   @default(false)
  spa                 Boolean   @default(false)
  laundry             Boolean   @default(false)
  restaurant          Boolean   @default(false)
  bar                 Boolean   @default(false)
  swimmingPool        Boolean   @default(false)
  freeWifi            Boolean   @default(false)
  freeParking         Boolean   @default(false)
  bikeRental          Boolean   @default(false)
  movieNight          Boolean   @default(false)
  coffeeShop          Boolean   @default(false)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  rooms               Room[]
  bookings            Booking[]

  @@map("hotels")
}

model Room {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  userId         String
  title          String
  description    String
  bedCount       String @default("0")
  bedRoomCount   String @default("0")
  guestCount     String @default("0")
  kingBed        String @default("0")
  queenBed       String @default("0")
  image          String
  roomPrice      String @default("0")
  breakFastPrice String @default("0")

  freeWifi     Boolean? @default(false)
  roomService  Boolean? @default(false)
  tv           Boolean? @default(false)
  airCondition Boolean? @default(false)
  heating      Boolean? @default(false)
  oceanView    Boolean? @default(false)
  mountainView Boolean? @default(false)
  forestView   Boolean? @default(false)
  soundProof   Boolean? @default(false)
  balcony      Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bookings Booking[]
  hotel    Hotel?    @relation(fields: [hotelId], references: [id])
  hotelId  String?   @db.ObjectId

  @@index([hotelId], name: "hotelId")
  @@map("rooms")
}

model Booking {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  username     String
  userId       String
  hotelOwnerId String
  email        String

  startDate DateTime
  endDate   DateTime

  breakFastIncluded Boolean @default(false)
  currency          String
  totalPrice        Float
  paymentStatus     Boolean @default(false)
  paymentIntentId   String  @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Hotel     Hotel?   @relation(fields: [hotelId], references: [id])
  hotelId   String?  @db.ObjectId
  room      Room?    @relation(fields: [roomId], references: [id])
  roomId    String?  @db.ObjectId

  @@map("bookings")
}
